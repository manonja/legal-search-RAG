services:
  api:
    build:
      context: ..
      dockerfile: ./api/Dockerfile
    image: legal-search-rag-api:${TENANT_ID:-default}
    container_name: legal-search-api-${TENANT_ID:-default}
    ports:
      - "${API_PORT:-8000}:8000"
    env_file:
      - ../api/.env
    environment:
      - PORT=8000
      - TENANT_ID=${TENANT_ID:-default}
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/gcp-key.json
    volumes:
      - legal_search_data:/app/cache
      - ../api:/app
      - ${GCP_CREDENTIALS:-../credentials/placeholder.json}:/app/credentials/gcp-key.json
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=http://localhost:${API_PORT:-8000}
    image: legal-search-rag-frontend:${TENANT_ID:-default}
    container_name: legal-search-frontend-${TENANT_ID:-default}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:${API_PORT:-8000}
      - NODE_ENV=production
      - TENANT_ID=${TENANT_ID:-default}
    depends_on:
      - api
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  legal_search_data:
    name: legal_search_data_${TENANT_ID:-default}
    driver: local
